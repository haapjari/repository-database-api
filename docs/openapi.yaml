openapi: 3.0.0
info:
  title: Repository Database API
  version: "1.0.0"
  description: API for Repository Entries.

paths:
    /api/v1/repos:
        get:
          summary: Get All Repositories
          responses:
            '200':
              description: Get All Repositories
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Repository'
        post:
          summary: Create a New Repository
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Repository'
          responses:
            '201':
              description: Created a Repository
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Repository'
    /api/v1/repos/{id}:
        get:
          summary: Get a Repository By ID
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: string
          responses:
            '200':
              description: Get a Single Repository
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Repository'
        put:
          summary: Update a Repository By ID
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: string
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Repository'
          responses:
            '200':
              description: Updated Repository
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Repository'

        delete:
          summary: Delete a Repository By ID
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: string
          responses:
            '204':
              description: Repository Deleted
    /api/v1/repos/normalized:
      get:
        summary: Get All Normalized Repositories
        responses:
          '200':
            description: List of all normalized repositories
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/NormalizedRepository'
      post:
        summary: Create a New Normalized Repository
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedRepository'
        responses:
          '201':
            description: Created a new normalized repository
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NormalizedRepository'
    /api/v1/repos/normalized/{id}:
      get:
        summary: Get a Normalized Repository By ID
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: A single normalized repository
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NormalizedRepository'
      put:
        summary: Update a Normalized Repository By ID
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizedRepository'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NormalizedRepository'
      delete:
        summary: Delete a Normalized Repository By ID
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: Deleted


components:
  schemas:
    Repository:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Unique identifier for the repository"
        name:
          type: string
        full_name:
          type: string
        created_at:
          type: string
          format: date-time
          description: "ISO8601 formatted creation datetime"
        stargazer_count:
          type: integer
        language:
          type: string
        open_issues:
          type: integer
        closed_issues:
          type: integer
        open_pull_request_count:
          type: integer
        closed_pull_request_count:
          type: integer
        forks:
          type: integer
        watcher_count:
          type: integer
        subscriber_count:
          type: integer
        commit_count:
          type: integer
        network_count:
          type: integer
        latest_release:
          type: string
        total_releases_count:
          type: integer
        contributor_count:
          type: integer
        third_party_loc:
          type: integer
        self_written_loc:
          type: integer

    NormalizedRepository:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        full_name:
          type: string
        language:
          type: string
        latest_release:
          type: number
          format: double
        created_at:
          type: number
          format: double
        stargazer_count:
          type: number
          format: double
        open_issues:
          type: number
          format: double
        closed_issues:
          type: number
          format: double
        open_pull_request_count:
          type: number
          format: double
        closed_pull_request_count:
          type: number
          format: double
        forks:
          type: number
          format: double
        watcher_count:
          type: number
          format: double
        subscriber_count:
          type: number
          format: double
        commit_count:
          type: number
          format: double
        network_count:
          type: number
          format: double
        total_releases_count:
          type: number
          format: double
        contributor_count:
          type: number
          format: double
        third_party_loc:
          type: number
          format: double
        self_written_loc:
          type: number
          format: double